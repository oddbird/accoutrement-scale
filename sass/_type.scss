// Type
// ====


// Get Lines [function]
// --------------------
/// Determine the number of typographic "lines" required
/// for a given font size and rhythm.
///
/// @access private
///
/// @param {String | Length | List} $size -
///   The name, length, or calculations required
///   for defining the font-size.
/// @param {String | Length | List} $rhythm -
///   The name, length, or calculations required
///   for defining the typographic rhythm.
@function _get-lines(
  $size: 'root',
  $rhythm: 'rhythm'
) {
  $font-size: size($size);
  $line-height: size($rhythm);

  @if (not comparable($font-size, $line-height)) {
    $font-size: convert-units($font-size, 'px');
    $line-height: convert-units($line-height, 'px');
  }

  @return ceil(2 * $font-size / $line-height) / 2;
}


// Font Size [mixin]
// -----------------
/// Set the font-size and line-height of an element
/// based on size configurations and typographic rhythm.
///
/// @group type
///
/// @param {String | Length | List} $size -
///   The name, length, or calculations required
///   for defining the font-size.
/// @param {Number} $lines [false] -
///   Optionally override the number of typographic lines needed.
/// @output -
///   Requested `font-size` with appropriate `line-height`.
@mixin font-size(
  $size,
  $lines: false
) {
  $rhythm: size('rhythm');
  $height: ($lines or _get-lines($size)) * $rhythm;
  $size: size($size);

  @if not $lines and ($size == $height) {
    $height: $height + ($rhythm / 2);
  }

  font-size: $size;
  line-height: $height;
}


// Browser Ems [function]
// ----------------------
/// Convert any comparable size into browser-default ems
/// usable in media-queries.
///
/// @group type
///
/// @param {String | Length | List} $size -
///   The name, length, or calculations required
///   for defining the font-size.
/// @return {Length} -
///   The given size, converted to `16px`-based `em` units.
@function browser-ems(
  $size
) {
  $size: size($size, 'px');

  @return $size / $_BROWSER-DEFAULT-FONT-SIZE * 1em;
}


// Baseline [mixin]
// ----------------
/// Set the root font-size as a percentage of the browser default,
/// along with an appropriate line-height in `em` units.
///
/// @group type
///
/// @param {String | Length | List} $size ['root'] -
///   The name, length, or calculations required
///   for defining the font-size.
/// @param {String | Length | List} $rhythm ['rhythm'] -
///   The name, length, or calculations required
///   for defining the typographic rhythm.
/// @output -
///   Requested `font-size` as a percentage of the browser default
///   with appropriate `line-height` set in `em` units.
@mixin baseline(
  $size: 'root',
  $rhythm: 'rhythm'
) {
  $size: size($size, 'px');

  font-size: percentage($size / $_BROWSER-DEFAULT-FONT-SIZE);
  line-height: size($rhythm, 'em');
}
